# Remove the line below if you want to inherit .editorconfig settings from higher directories
root = true

# C# files
[*.cs]

#### Core EditorConfig Options ####

indent_style = space
indent_size = 4
tab_width = 4
end_of_line = crlf
charset = utf-8-bom
trim_trailing_whitespace = true
insert_final_newline = true

#### .NET Coding Conventions ####

# Organize usings
dotnet_separate_import_directive_groups = false
dotnet_sort_system_directives_first = false

# this. and Me. preferences
dotnet_style_qualification_for_event = false:silent
dotnet_style_qualification_for_field = false:silent
dotnet_style_qualification_for_method = false:silent
dotnet_style_qualification_for_property = false:silent

# Language keywords vs BCL types preferences
dotnet_style_predefined_type_for_locals_parameters_members = true:suggestion
dotnet_style_predefined_type_for_member_access = true:suggestion

# Parentheses preferences
dotnet_style_parentheses_in_arithmetic_binary_operators = always_for_clarity:silent
dotnet_style_parentheses_in_other_binary_operators = always_for_clarity:warning
dotnet_style_parentheses_in_other_operators = never_if_unnecessary:suggestion
dotnet_style_parentheses_in_relational_binary_operators = always_for_clarity:warning

# Modifier preferences
dotnet_style_require_accessibility_modifiers = for_non_interface_members:silent

# Expression-level preferences
csharp_style_deconstructed_variable_declaration = true:warning
csharp_style_inlined_variable_declaration = true:suggestion
csharp_style_throw_expression = true:suggestion
dotnet_style_coalesce_expression = true:warning
dotnet_style_collection_initializer = true:suggestion
dotnet_style_explicit_tuple_names = true:warning
dotnet_style_null_propagation = true:warning
dotnet_style_object_initializer = true:suggestion
dotnet_style_prefer_auto_properties = true:warning
dotnet_style_prefer_compound_assignment = true:suggestion
dotnet_style_prefer_conditional_expression_over_assignment = true:suggestion
dotnet_style_prefer_conditional_expression_over_return = true:suggestion
dotnet_style_prefer_inferred_anonymous_type_member_names = true:suggestion
dotnet_style_prefer_inferred_tuple_names = true:suggestion
dotnet_style_prefer_is_null_check_over_reference_equality_method = true:warning

# Field preferences
dotnet_style_readonly_field = true:warning

# Parameter preferences
dotnet_code_quality_unused_parameters = non_public:warning

#### C# Coding Conventions ####

# var preferences
csharp_style_var_elsewhere = false:suggestion
csharp_style_var_for_built_in_types = false:suggestion
csharp_style_var_when_type_is_apparent = true:suggestion

# Expression-bodied members
csharp_style_expression_bodied_accessors = true:suggestion
csharp_style_expression_bodied_constructors = false:suggestion
csharp_style_expression_bodied_indexers = true:suggestion
csharp_style_expression_bodied_lambdas = true:suggestion
csharp_style_expression_bodied_local_functions = when_on_single_line:suggestion
csharp_style_expression_bodied_methods = false:suggestion
csharp_style_expression_bodied_operators = true:suggestion
csharp_style_expression_bodied_properties = true:suggestion

# Pattern matching preferences
csharp_style_pattern_matching_over_as_with_null_check = true:warning
csharp_style_pattern_matching_over_is_with_cast_check = true:warning
csharp_style_prefer_switch_expression = true:suggestion

# Null-checking preferences
csharp_style_conditional_delegate_call = true:warning

# Modifier preferences
csharp_prefer_static_local_function = true:warning
csharp_preferred_modifier_order = new,public,private,protected,internal,static,extern,virtual,abstract,sealed,override,readonly,unsafe,volatile,async:warning

# Code-block preferences
csharp_prefer_braces = true:warning
csharp_prefer_simple_using_statement = true:suggestion

# Expression-level preferences
csharp_prefer_simple_default_expression = true:suggestion
csharp_style_pattern_local_over_anonymous_function = true:warning
csharp_style_prefer_index_operator = true:warning
csharp_style_prefer_range_operator = true:warning
csharp_style_unused_value_assignment_preference = discard_variable:warning
csharp_style_unused_value_expression_statement_preference = discard_variable:suggestion

# 'using' directive preferences
csharp_using_directive_placement = outside_namespace:suggestion

#### C# Formatting Rules ####

# New line preferences
csharp_new_line_before_catch = true
csharp_new_line_before_else = true
csharp_new_line_before_finally = true
csharp_new_line_before_members_in_anonymous_types = true
csharp_new_line_before_members_in_object_initializers = true
csharp_new_line_before_open_brace = all
csharp_new_line_between_query_expression_clauses = true

# Indentation preferences
csharp_indent_block_contents = true
csharp_indent_braces = false
csharp_indent_case_contents = true
csharp_indent_case_contents_when_block = false
csharp_indent_labels = one_less_than_current
csharp_indent_switch_labels = true

# Space preferences
csharp_space_after_cast = false
csharp_space_after_colon_in_inheritance_clause = true
csharp_space_after_comma = true
csharp_space_after_dot = false
csharp_space_after_keywords_in_control_flow_statements = true
csharp_space_after_semicolon_in_for_statement = true
csharp_space_around_binary_operators = before_and_after
csharp_space_around_declaration_statements = ignore
csharp_space_before_colon_in_inheritance_clause = true
csharp_space_before_comma = false
csharp_space_before_dot = false
csharp_space_before_open_square_brackets = false
csharp_space_before_semicolon_in_for_statement = false
csharp_space_between_empty_square_brackets = false
csharp_space_between_method_call_empty_parameter_list_parentheses = false
csharp_space_between_method_call_name_and_opening_parenthesis = false
csharp_space_between_method_call_parameter_list_parentheses = false
csharp_space_between_method_declaration_empty_parameter_list_parentheses = false
csharp_space_between_method_declaration_name_and_open_parenthesis = false
csharp_space_between_method_declaration_parameter_list_parentheses = false
csharp_space_between_parentheses = false
csharp_space_between_square_brackets = false

# Wrapping preferences
csharp_preserve_single_line_blocks = true
csharp_preserve_single_line_statements = true

#### Naming styles ####

# Naming rules

dotnet_naming_rule.internal_abstract_classes_should_be_pascal_case_base_suffix.severity = warning
dotnet_naming_rule.internal_abstract_classes_should_be_pascal_case_base_suffix.symbols = internal_abstract_classes
dotnet_naming_rule.internal_abstract_classes_should_be_pascal_case_base_suffix.style = pascal_case_base_suffix

dotnet_naming_rule.interfaces_should_be_i_prefix_pascal_case.severity = warning
dotnet_naming_rule.interfaces_should_be_i_prefix_pascal_case.symbols = interfaces
dotnet_naming_rule.interfaces_should_be_i_prefix_pascal_case.style = i_prefix_pascal_case

dotnet_naming_rule.async_methods_should_be_pascal_case_async_suffix.severity = warning
dotnet_naming_rule.async_methods_should_be_pascal_case_async_suffix.symbols = async_methods
dotnet_naming_rule.async_methods_should_be_pascal_case_async_suffix.style = pascal_case_async_suffix

dotnet_naming_rule.fields_should_be_underscore_prefix_camel_case.severity = warning
dotnet_naming_rule.fields_should_be_underscore_prefix_camel_case.symbols = fields
dotnet_naming_rule.fields_should_be_underscore_prefix_camel_case.style = underscore_prefix_camel_case

dotnet_naming_rule.type_params_should_be_t_prefix_pascal_case.severity = warning
dotnet_naming_rule.type_params_should_be_t_prefix_pascal_case.symbols = type_params
dotnet_naming_rule.type_params_should_be_t_prefix_pascal_case.style = t_prefix_pascal_case

dotnet_naming_rule.types_should_be_pascal_case.severity = warning
dotnet_naming_rule.types_should_be_pascal_case.symbols = globals
dotnet_naming_rule.types_should_be_pascal_case.style = pascal_case

dotnet_naming_rule.members_should_be_pascal_case.severity = warning
dotnet_naming_rule.members_should_be_pascal_case.symbols = members
dotnet_naming_rule.members_should_be_pascal_case.style = pascal_case

dotnet_naming_rule.local_vars_should_be_camel_case.severity = warning
dotnet_naming_rule.local_vars_should_be_camel_case.symbols = locals
dotnet_naming_rule.local_vars_should_be_camel_case.style = camel_case

# Symbol specifications

dotnet_naming_symbols.internal_abstract_classes.applicable_kinds = class
dotnet_naming_symbols.internal_abstract_classes.applicable_accessibilities = internal, private, private_protected
dotnet_naming_symbols.internal_abstract_classes.required_modifiers = abstract

dotnet_naming_symbols.interfaces.applicable_kinds = interface
dotnet_naming_symbols.interfaces.applicable_accessibilities = *
dotnet_naming_symbols.interfaces.required_modifiers = 

dotnet_naming_symbols.globals.applicable_kinds = namespace, class, struct, interface, enum, delegate
dotnet_naming_symbols.globals.applicable_accessibilities = *
dotnet_naming_symbols.globals.required_modifiers = 

dotnet_naming_symbols.async_methods.applicable_kinds = method
dotnet_naming_symbols.async_methods.applicable_accessibilities = *
dotnet_naming_symbols.async_methods.required_modifiers = async

dotnet_naming_symbols.fields.applicable_kinds = field
dotnet_naming_symbols.fields.applicable_accessibilities = *
dotnet_naming_symbols.fields.required_modifiers = 

dotnet_naming_symbols.members.applicable_kinds = property, method, field, event
dotnet_naming_symbols.members.applicable_accessibilities = *
dotnet_naming_symbols.members.required_modifiers = 

dotnet_naming_symbols.locals.applicable_kinds = parameter, local, local_function
dotnet_naming_symbols.locals.applicable_accessibilities = *
dotnet_naming_symbols.locals.required_modifiers = 

dotnet_naming_symbols.type_params.applicable_kinds = type_parameter
dotnet_naming_symbols.type_params.applicable_accessibilities = *
dotnet_naming_symbols.type_params.required_modifiers = 

# Naming styles

dotnet_naming_style.pascal_case.required_prefix = 
dotnet_naming_style.pascal_case.required_suffix = 
dotnet_naming_style.pascal_case.word_separator = 
dotnet_naming_style.pascal_case.capitalization = pascal_case

dotnet_naming_style.i_prefix_pascal_case.required_prefix = I
dotnet_naming_style.i_prefix_pascal_case.required_suffix = 
dotnet_naming_style.i_prefix_pascal_case.word_separator = 
dotnet_naming_style.i_prefix_pascal_case.capitalization = pascal_case

dotnet_naming_style.t_prefix_pascal_case.required_prefix = T
dotnet_naming_style.t_prefix_pascal_case.required_suffix = 
dotnet_naming_style.t_prefix_pascal_case.word_separator = 
dotnet_naming_style.t_prefix_pascal_case.capitalization = pascal_case

dotnet_naming_style.pascal_case_async_suffix.required_prefix = 
dotnet_naming_style.pascal_case_async_suffix.required_suffix = Async
dotnet_naming_style.pascal_case_async_suffix.word_separator = 
dotnet_naming_style.pascal_case_async_suffix.capitalization = pascal_case

dotnet_naming_style.pascal_case_base_suffix.required_prefix = 
dotnet_naming_style.pascal_case_base_suffix.required_suffix = Base
dotnet_naming_style.pascal_case_base_suffix.word_separator = 
dotnet_naming_style.pascal_case_base_suffix.capitalization = pascal_case

dotnet_naming_style.camel_case.required_prefix = 
dotnet_naming_style.camel_case.required_suffix = 
dotnet_naming_style.camel_case.word_separator = 
dotnet_naming_style.camel_case.capitalization = camel_case

dotnet_naming_style.underscore_prefix_camel_case.required_prefix = _
dotnet_naming_style.underscore_prefix_camel_case.required_suffix = 
dotnet_naming_style.underscore_prefix_camel_case.word_separator = 
dotnet_naming_style.underscore_prefix_camel_case.capitalization = camel_case
